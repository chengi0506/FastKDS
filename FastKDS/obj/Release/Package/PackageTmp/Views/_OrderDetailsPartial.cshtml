@model IEnumerable<FastKDS.Models.Orders>

@{
    Func<FastKDS.Models.Orders, int, string> isStepActive = (order, step) =>
    {
        string result = "";
        if (step == 1)
        {
            result = " active";
        }
        else
        {
            result = "";
        }
        return result;
    };

    Func<FastKDS.Models.Orders, int, string> getStepLabel = (order, step) =>
    {
        string label = "";
        switch (step)
        {
            case 1:
                label = "待製作";
                break;
            case 2:
                label = "製作中";
                break;
            case 3:
                label = "待取餐";
                break;
            case 4:
                label = "已完成";
                break;
            default:
                label = "N/A";
                break;
        }
        return label;
    };

    Func<FastKDS.Models.Orders, int, string> getDataTarget = (order, step) =>
    {
        string result = "";
        if (step == 1)
        {
            result = "#logins-part";
        }
        else
        {
            result = "#information-part";
        }
        return result;
    };

    Func<FastKDS.Models.Orders, int, string> getAriaControls = (order, step) =>
    {
        string result = "";
        if (step == 1)
        {
            result = "logins-part";
        }
        else
        {
            result = "information-part";
        }
        return result;
    };

    Func<FastKDS.Models.Orders, int, string> getAriaSelected = (order, step) =>
    {
        string result = "";
        switch (step)
        {
            case 1:
                if (order.State == "待製作")
                {
                    result = "true";
                }
                else
                {
                    result = "false";
                }
                break;
            case 2:
                if (order.State == "製作中")
                {
                    result = "true";
                }
                else
                {
                    result = "false";
                }
                break;
            case 3:
                if (order.State == "待取餐")
                {
                    result = "true";
                }
                else
                {
                    result = "false";
                }
                break;
            case 4:
                if (order.State == "已完成")
                {
                    result = "true";
                }
                else
                {
                    result = "false";
                }
                break;
        }
        return result;
    };

    Func<FastKDS.Models.Orders, int, string> getDisabled = (order, step) =>
    {
        string result = "";
        switch (step)
        {
            case 1:
                if (order.State == "待製作")
                {
                    result = " disabled=\"disabled\"";
                }
                break;
            case 2:
                if (order.State == "製作中")
                {
                    result = " disabled=\"disabled\"";
                }
                break;
            case 3:
                if (order.State == "待取餐")
                {
                    result = " disabled=\"disabled\"";
                }
                break;
            case 4:
                if (order.State == "已完成")
                {
                    result = " disabled=\"disabled\"";
                }
                break;
        }
        return result;
    };

    Func<FastKDS.Models.Orders, int, string> getId = (order, step) =>
    {
        string result = "";
        if (step == 1)
        {
            result = "logins-part-trigger";
        }
        else
        {
            result = "information-part-trigger";
        }
        return result;
    };

    Func<FastKDS.Models.Orders, int, string> getDateTime = (order, step) =>
    {
        string result = "N/A";
        switch (step)
        {
            case 1:
                if (order.DateTime != null)
                {
                    result = order.DateTime.ToString("HH:mm:ss");
                }
                break;
            case 2:
                if (order.CookTime != null)
                {
                    result = order.CookTime.Value.ToString("HH:mm:ss");
                }
                break;
            case 3:
                if (order.MakeTime != null)
                {
                    result = order.MakeTime.Value.ToString("HH:mm:ss");
                }
                break;
            case 4:
                if (order.TakeTime != null)
                {
                    result = order.TakeTime.Value.ToString("HH:mm:ss");
                }
                break;
        }
        return result;

    };
}

@foreach (var order in Model)
{
    <tr>
        <td>
            <div class="bs-stepper linear">
                <div class="bs-stepper-header" role="tablist">
                    <div class="step active" data-target="#logins-part">
                        <button type="button" class="step-trigger" role="tab" aria-controls="logins-part" id="logins-part-trigger" aria-selected="true">
                            <span class="bs-stepper-circle">1</span>
                            <span class="bs-stepper-label">待製作</span>
                            <span class="bs-stepper-label">14:10:00</span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#information-part">
                        <button type="button" class="step-trigger" role="tab" aria-controls="information-part" id="information-part-trigger" aria-selected="false" disabled>
                            <span class="bs-stepper-circle">2</span>
                            <span class="bs-stepper-label">製作中</span>
                            <span class="bs-stepper-label">N/A</span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#information-part">
                        <button type="button" class="step-trigger" role="tab" aria-controls="information-part" id="information-part-trigger" aria-selected="false" disabled>
                            <span class="bs-stepper-circle">3</span>
                            <span class="bs-stepper-label">待取餐</span>
                            <span class="bs-stepper-label">N/A</span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#information-part">
                        <button type="button" class="step-trigger" role="tab" aria-controls="information-part" id="information-part-trigger" aria-selected="false" disabled>
                            <span class="bs-stepper-circle">4</span>
                            <span class="bs-stepper-label">已完成</span>
                            <span class="bs-stepper-label">N/A</span>
                        </button>
                    </div>
                </div>
            </div>
        </td>
        <td>@order.OrderID</td>
        <td>
            <ul>
                @foreach (var item in order.OrderDetail)
                {
                    <li>@item.Name X @item.Quantity (@item.Note)</li>
                }
            </ul>
        </td>
        <td>@order.Note</td>
        <td>
            @if (order.State != "已完成")
            {
                <button class="btn btn-danger" onclick="updateOrderStatus(@order.OrderID, '@order.State')">下一步</button>
            }
        </td>
    </tr>
}
